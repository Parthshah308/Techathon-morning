{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\vercel\\\\components\\\\navigation\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport NavItem from './nav-item';\nimport { World } from '../icons';\nimport styles from './navigation.module.css';\n\nvar Navigation = function Navigation() {\n  _s();\n\n  var router = useRouter();\n\n  var _useContext = useContext(AuthContext),\n      authState = _useContext.authState,\n      isAuthenticated = _useContext.isAuthenticated;\n\n  return __jsx(\"nav\", {\n    className: styles.nav,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(NavItem, {\n    href: \"/Dashboard\",\n    selected: router.pathname.split('/')[1] == 'Dashboard',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Dashboard\")), __jsx(NavItem, {\n    href: \"/\",\n    selected: router.pathname == '/' || router.pathname.split('/')[1] == 'questions',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(World, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"TakeCode\")), __jsx(NavItem, {\n    href: \"/Question\",\n    selected: router.pathname.split('/')[1] == 'Question',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Questions\")), __jsx(NavItem, {\n    href: \"/tags\",\n    selected: router.pathname == '/tags',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Tags\")), __jsx(NavItem, {\n    href: \"/users\",\n    selected: router.pathname.split('/')[1] == 'users',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Users\")));\n};\n\n_s(Navigation, \"+Xo72x5zQYb9i5PqXBgN40nq5xw=\", false, function () {\n  return [useRouter];\n});\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["C:/vercel/components/navigation/index.js"],"names":["React","useRouter","NavItem","World","styles","Navigation","router","useContext","AuthContext","authState","isAuthenticated","nav","pathname","split"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,KAAT,QAAsB,UAAtB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACvB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;;AADuB,oBAEgBM,UAAU,CAACC,WAAD,CAF1B;AAAA,MAEfC,SAFe,eAEfA,SAFe;AAAA,MAEJC,eAFI,eAEJA,eAFI;;AAGvB,SACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACO,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,QAAQ,EAAEL,MAAM,CAACM,QAAP,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,KAAiC,WAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADF,EAOE,MAAC,OAAD;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,QAAQ,EACNP,MAAM,CAACM,QAAP,IAAmB,GAAnB,IAA0BN,MAAM,CAACM,QAAP,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,KAAiC,WAH/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CAPF,EAgBE,MAAC,OAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,QAAQ,EAAEP,MAAM,CAACM,QAAP,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,KAAiC,UAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CAhBF,EAsBE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,OAAd;AAAsB,IAAA,QAAQ,EAAEP,MAAM,CAACM,QAAP,IAAmB,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAtBF,EA0BE,MAAC,OAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAEN,MAAM,CAACM,QAAP,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,KAAiC,OAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CA1BF,CADF;AAmCD,CAtCD;;GAAMR,U;UACWJ,S;;;KADXI,U;AAwCN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport { useRouter } from 'next/router'\n\nimport NavItem from './nav-item'\nimport { World } from '../icons'\n\nimport styles from './navigation.module.css'\n\nconst Navigation = () => {\n  const router = useRouter()\n  const { authState, isAuthenticated } = useContext(AuthContext);\n  return (\n    <nav className={styles.nav}>\n      <NavItem\n        href=\"/Dashboard\"\n        selected={router.pathname.split('/')[1] == 'Dashboard'}\n      >\n        <span>Dashboard</span>\n      </NavItem>\n      <NavItem\n        href=\"/\"\n        selected={\n          router.pathname == '/' || router.pathname.split('/')[1] == 'questions'\n        }\n      >\n        <World />\n        <span>TakeCode</span>\n      </NavItem>\n      <NavItem\n        href=\"/Question\"\n        selected={router.pathname.split('/')[1] == 'Question'}\n      >\n        <span>Questions</span>\n      </NavItem>\n      <NavItem href=\"/tags\" selected={router.pathname == '/tags'}>\n        <span>Tags</span>\n      </NavItem>\n\n      <NavItem\n        href=\"/users\"\n        selected={router.pathname.split('/')[1] == 'users'}\n      >\n        <span>Users</span>\n      </NavItem>\n    </nav>\n  )\n}\n\nexport default Navigation\n"]},"metadata":{},"sourceType":"module"}