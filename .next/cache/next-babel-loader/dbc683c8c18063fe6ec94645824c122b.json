{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Documents\\\\vercel1\\\\vercel1\\\\components\\\\modal\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useContext } from 'react';\nimport cn from 'classnames';\nimport ModalContext from '../../store/modal';\nimport { Close } from '../icons';\nimport Button from '../button';\nimport styles from './modal.module.css';\n\nconst Modal = (_ref) => {\n  let {\n    children,\n    className\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\"]);\n\n  const {\n    ref,\n    setIsComponentVisible\n  } = useContext(ModalContext);\n  return __jsx(React.Fragment, null, __jsx(\"div\", _extends({\n    className: cn(styles.modal, className)\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    ref: ref,\n    className: styles.modalDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    className: styles.closeButton,\n    onClick: () => setIsComponentVisible(isOpen => !isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, __jsx(Close, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  })), children)));\n};\n\nexport default Modal;","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Documents/vercel1/vercel1/components/modal/index.js"],"names":["React","useContext","cn","ModalContext","Close","Button","styles","Modal","children","className","props","ref","setIsComponentVisible","modal","modalDialog","closeButton","isOpen"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,UAAuC;AAAA,MAAtC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAsC;AAAA,MAAZC,KAAY;;AACnD,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAiCX,UAAU,CAACE,YAAD,CAAjD;AACA,SACE,4BACE;AAAK,IAAA,SAAS,EAAED,EAAE,CAACI,MAAM,CAACO,KAAR,EAAeJ,SAAf;AAAlB,KAAiDC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAK,IAAA,GAAG,EAAEC,GAAV;AAAe,IAAA,SAAS,EAAEL,MAAM,CAACQ,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAER,MAAM,CAACS,WAA1B;AAAuC,IAAA,OAAO,EAAE,MAAMH,qBAAqB,CAAEI,MAAD,IAAY,CAACA,MAAd,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGR,QAJH,CADF,CADF,CADF;AAYD,CAdD;;AAgBA,eAAeD,KAAf","sourcesContent":["import React, { useContext } from 'react'\nimport cn from 'classnames'\n\nimport ModalContext from '../../store/modal'\nimport { Close } from '../icons'\nimport Button from '../button'\n\nimport styles from './modal.module.css'\n\nconst Modal = ({ children, className, ...props }) => {\n  const { ref, setIsComponentVisible } = useContext(ModalContext)\n  return (\n    <>\n      <div className={cn(styles.modal, className)} {...props}>\n        <div ref={ref} className={styles.modalDialog}>\n          <Button className={styles.closeButton} onClick={() => setIsComponentVisible((isOpen) => !isOpen)}>\n            <Close />\n          </Button>\n          {children}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Modal\n"]},"metadata":{},"sourceType":"module"}