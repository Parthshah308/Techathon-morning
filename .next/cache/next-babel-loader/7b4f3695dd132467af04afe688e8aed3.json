{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\vercel\\\\pages\\\\users\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { publicFetch } from '../../util/fetcher';\nimport Layout from '../../components/layout';\nimport PageTitle from '../../components/page-title';\nimport SearchInput from '../../components/search-input';\nimport UserList from '../../components/user-list';\nimport UserItem from '../../components/user-list/user-item';\nimport { Spinner } from '../../components/icons';\n\nfunction UsersPage() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(null),\n      searchTerm = _useState[0],\n      setSearchTerm = _useState[1];\n\n  var _useState2 = useState(null),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  useEffect(function () {\n    if (searchTerm === null) {\n      var fetchUser = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var _yield$publicFetch$ge, data;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return publicFetch.get('/users');\n\n                case 2:\n                  _yield$publicFetch$ge = _context.sent;\n                  data = _yield$publicFetch$ge.data;\n                  setUsers(data);\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function fetchUser() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      fetchUser();\n    } else {\n      var delayDebounceFn = setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _yield$publicFetch$ge2, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setLoading(true);\n                _context2.next = 3;\n                return publicFetch.get(searchTerm ? \"/users/\".concat(searchTerm) : \"/users\");\n\n              case 3:\n                _yield$publicFetch$ge2 = _context2.sent;\n                data = _yield$publicFetch$ge2.data;\n                setUsers(data);\n                setLoading(false);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })), 500);\n      return function () {\n        return clearTimeout(delayDebounceFn);\n      };\n    }\n  }, [searchTerm]);\n  return __jsx(Layout, {\n    extra: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Users - Clone of Stackoverflow\")), __jsx(PageTitle, {\n    title: \"Users\",\n    borderBottom: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), __jsx(SearchInput, {\n    placeholder: \"Search by user\",\n    isLoading: loading,\n    autoFocus: true,\n    autoComplete: \"off\",\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setSearchTerm(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), !users && __jsx(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), users && __jsx(React.Fragment, null, __jsx(UserList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, users === null || users === void 0 ? void 0 : users.map(function (_ref3) {\n    var username = _ref3.username,\n        profilePhoto = _ref3.profilePhoto,\n        created = _ref3.created,\n        id = _ref3.id;\n    return __jsx(UserItem, {\n      key: id,\n      username: username,\n      profilePhoto: profilePhoto,\n      created: created,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    });\n  })), users.length == 0 && __jsx(\"p\", {\n    className: \"not-found\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"No users matched your search.\")));\n}\n\n_s(UsersPage, \"WoIhDAg1jr2kAtloayE0sUcqMbA=\");\n\n_c = UsersPage;\nexport default UsersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"sources":["C:/vercel/pages/users/index.js"],"names":["React","useEffect","useState","Head","publicFetch","Layout","PageTitle","SearchInput","UserList","UserItem","Spinner","UsersPage","searchTerm","setSearchTerm","users","setUsers","loading","setLoading","fetchUser","get","data","delayDebounceFn","setTimeout","clearTimeout","e","target","value","map","username","profilePhoto","created","id","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Head from 'next/head'\n\nimport { publicFetch } from '../../util/fetcher'\n\nimport Layout from '../../components/layout'\nimport PageTitle from '../../components/page-title'\nimport SearchInput from '../../components/search-input'\nimport UserList from '../../components/user-list'\nimport UserItem from '../../components/user-list/user-item'\nimport { Spinner } from '../../components/icons'\n\nfunction UsersPage() {\n  const [searchTerm, setSearchTerm] = useState(null)\n  const [users, setUsers] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (searchTerm === null) {\n      const fetchUser = async () => {\n        const { data } = await publicFetch.get('/users')\n        setUsers(data)\n      }\n\n      fetchUser()\n    } else {\n      const delayDebounceFn = setTimeout(async () => {\n        setLoading(true)\n        const { data } = await publicFetch.get(\n          searchTerm ? `/users/${searchTerm}` : `/users`\n        )\n        setUsers(data)\n        setLoading(false)\n      }, 500)\n\n      return () => clearTimeout(delayDebounceFn)\n    }\n  }, [searchTerm])\n\n  return (\n    <Layout extra={false}>\n      <Head>\n        <title>Users - Clone of Stackoverflow</title>\n      </Head>\n\n      <PageTitle title=\"Users\" borderBottom={false} />\n\n      <SearchInput\n        placeholder=\"Search by user\"\n        isLoading={loading}\n        autoFocus\n        autoComplete=\"off\"\n        type=\"text\"\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n\n      {!users && (\n        <div className=\"loading\">\n          <Spinner />\n        </div>\n      )}\n\n      {users && (\n        <>\n          <UserList>\n            {users?.map(({ username, profilePhoto, created, id }) => (\n              <UserItem\n                key={id}\n                username={username}\n                profilePhoto={profilePhoto}\n                created={created}\n              />\n            ))}\n          </UserList>\n\n          {users.length == 0 && (\n            <p className=\"not-found\">No users matched your search.</p>\n          )}\n        </>\n      )}\n    </Layout>\n  )\n}\n\nexport default UsersPage\n"]},"metadata":{},"sourceType":"module"}