{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Documents\\\\takecode_vercel-master\\\\takecode_vercel-master\\\\components\\\\textarea\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ReactQuill from 'react-quill';\nimport dynamic from \"next/dynamic\";\nimport cn from 'classnames';\nimport styles from './textarea.module.css';\n\nvar TextArea = function TextArea(_ref) {\n  _s();\n\n  var label = _ref.label,\n      inputInfo = _ref.inputInfo,\n      hasError = _ref.hasError,\n      errorMessage = _ref.errorMessage,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"label\", \"inputInfo\", \"hasError\", \"errorMessage\", \"className\"]);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, label && __jsx(\"label\", {\n    className: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, label), inputInfo && __jsx(\"p\", {\n    className: styles.inputInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, inputInfo), __jsx(ReactQuill, {\n    theme: \"snow\",\n    value: value,\n    onChange: setValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), \";\", hasError && __jsx(\"p\", {\n    className: styles.errorMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }\n  }, errorMessage));\n};\n\n_s(TextArea, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c = TextArea;\nexport default TextArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextArea\");","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Documents/takecode_vercel-master/takecode_vercel-master/components/textarea/index.js"],"names":["React","ReactQuill","dynamic","cn","styles","TextArea","label","inputInfo","hasError","errorMessage","className","props","useState","value","setValue","container"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAOX;AAAA;;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,YAGI,QAHJA,YAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADDC,KACC;;AAAA,kBACsBC,QAAQ,CAAC,EAAD,CAD9B;AAAA;AAAA,MACGC,KADH;AAAA,MACUC,QADV;;AAEJ,SACE;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACW,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,IAAI;AAAO,IAAA,SAAS,EAAEF,MAAM,CAACE,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,KAAjC,CADZ,EAEGC,SAAS,IAAI;AAAG,IAAA,SAAS,EAAEH,MAAM,CAACG,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,SAAjC,CAFhB,EAGE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,KAAK,EAAEM,KAAhC;AAAuC,IAAA,QAAQ,EAAEC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,OAIGN,QAAQ,IAAI;AAAG,IAAA,SAAS,EAAEJ,MAAM,CAACK,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCA,YAApC,CAJf,CADF;AAQD,CAjBD;;GAAMJ,Q;;KAAAA,Q;AAmBN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport ReactQuill from 'react-quill';\nimport dynamic from \"next/dynamic\";\nimport cn from 'classnames'\n\nimport styles from './textarea.module.css'\n\nconst TextArea = ({\n  label,\n  inputInfo,\n  hasError,\n  errorMessage,\n  className,\n  ...props\n}) => {\n  const [value, setValue] = useState('');\n  return (\n    <div className={styles.container}>\n      {label && <label className={styles.label}>{label}</label>}\n      {inputInfo && <p className={styles.inputInfo}>{inputInfo}</p>}\n      <ReactQuill theme=\"snow\" value={value} onChange={setValue} />;\n      {hasError && <p className={styles.errorMessage}>{errorMessage}</p>}\n    </div>\n  )\n}\n\nexport default TextArea\n"]},"metadata":{},"sourceType":"module"}