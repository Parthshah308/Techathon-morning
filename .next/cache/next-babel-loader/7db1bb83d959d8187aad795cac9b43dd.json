{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Documents\\\\vercel1\\\\vercel1\\\\components\\\\navigation\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport NavItem from './nav-item';\nimport { World } from '../icons';\nimport styles from './navigation.module.css';\nimport { AuthContext } from '../../store/auth';\n\nvar Navigation = function Navigation() {\n  _s();\n\n  var router = useRouter();\n\n  var _useContext = useContext(AuthContext),\n      isAuthenticated = _useContext.isAuthenticated,\n      isAdmin = _useContext.isAdmin;\n\n  return __jsx(\"nav\", {\n    className: styles.nav,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, isAuthenticated() && isAdmin() ? __jsx(NavItem, {\n    href: \"/Dashboard\",\n    selected: router.pathname.split('/')[1] == 'Dashboard',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \"Dashboard\")) : __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), __jsx(NavItem, {\n    href: \"/\",\n    selected: router.pathname == '/' || router.pathname.split('/')[1] == 'questions',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(World, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"TakeCode\")), isAuthenticated() && isAdmin() ? __jsx(NavItem, {\n    href: \"/Question\",\n    selected: router.pathname.split('/')[1] == 'Question',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Questions\")) : __jsx(React.Fragment, null), __jsx(NavItem, {\n    href: \"/tags\",\n    selected: router.pathname == '/tags',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Tags\")), __jsx(NavItem, {\n    href: \"/users\",\n    selected: router.pathname.split('/')[1] == 'users',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Users\")));\n};\n\n_s(Navigation, \"x8Er+AQXRiBJ/cSf6N3OM9YXoHQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Documents/vercel1/vercel1/components/navigation/index.js"],"names":["React","useContext","useRouter","NavItem","World","styles","AuthContext","Navigation","router","isAuthenticated","isAdmin","nav","pathname","split"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,KAAT,QAAsB,UAAtB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACvB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;;AADuB,oBAEcD,UAAU,CAACK,WAAD,CAFxB;AAAA,MAEfG,eAFe,eAEfA,eAFe;AAAA,MAEEC,OAFF,eAEEA,OAFF;;AAGvB,SACE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACM,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,eAAe,MAAMC,OAAO,EAA5B,GACC,MAAC,OAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,QAAQ,EAAEF,MAAM,CAACI,QAAP,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,KAAiC,WAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADD,GAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAYE,MAAC,OAAD;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,QAAQ,EACNL,MAAM,CAACI,QAAP,IAAmB,GAAnB,IAA0BJ,MAAM,CAACI,QAAP,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,KAAiC,WAH/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CAZF,EAqBGJ,eAAe,MAAMC,OAAO,EAA5B,GACC,MAAC,OAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,QAAQ,EAAEF,MAAM,CAACI,QAAP,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,KAAiC,UAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADD,GAQC,2BA7BJ,EA+BE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,OAAd;AAAsB,IAAA,QAAQ,EAAEL,MAAM,CAACI,QAAP,IAAmB,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CA/BF,EAmCE,MAAC,OAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAEJ,MAAM,CAACI,QAAP,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,KAAiC,OAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAnCF,CADF;AA4CD,CA/CD;;GAAMN,U;UACWL,S;;;KADXK,U;AAiDN,eAAeA,UAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { useRouter } from 'next/router'\n\nimport NavItem from './nav-item'\nimport { World } from '../icons'\n\nimport styles from './navigation.module.css'\nimport { AuthContext } from '../../store/auth'\n\nconst Navigation = () => {\n  const router = useRouter()\n  const { isAuthenticated, isAdmin } = useContext(AuthContext)\n  return (\n    <nav className={styles.nav}>\n      {isAuthenticated() && isAdmin() ? (\n        <NavItem\n          href=\"/Dashboard\"\n          selected={router.pathname.split('/')[1] == 'Dashboard'}\n        >\n          <span>Dashboard</span>\n        </NavItem>\n      ) : (\n        <span></span>\n      )}\n\n      <NavItem\n        href=\"/\"\n        selected={\n          router.pathname == '/' || router.pathname.split('/')[1] == 'questions'\n        }\n      >\n        <World />\n        <span>TakeCode</span>\n      </NavItem>\n      {isAuthenticated() && isAdmin() ? (\n        <NavItem\n          href=\"/Question\"\n          selected={router.pathname.split('/')[1] == 'Question'}\n        >\n          <span>Questions</span>\n        </NavItem>\n      ) : (\n        <></>\n      )}\n      <NavItem href=\"/tags\" selected={router.pathname == '/tags'}>\n        <span>Tags</span>\n      </NavItem>\n\n      <NavItem\n        href=\"/users\"\n        selected={router.pathname.split('/')[1] == 'users'}\n      >\n        <span>Users</span>\n      </NavItem>\n    </nav>\n  )\n}\n\nexport default Navigation\n"]},"metadata":{},"sourceType":"module"}