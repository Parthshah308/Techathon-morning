{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Documents\\\\vercel1\\\\vercel1\\\\pages\\\\users\\\\[username].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { publicFetch } from '../../util/fetcher';\nimport Layout from '../../components/layout';\nimport UserCard from '../../components/user-card';\nimport AvatarCard from '../../components/user-card/avatar-card';\nimport PostList from '../../components/user-card/post-list';\nimport PostItem from '../../components/user-card/post-list/post-item';\nimport { Spinner } from '../../components/icons';\n\nconst UserDetail = ({\n  username\n}) => {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(null);\n  const {\n    0: postType,\n    1: setPostType\n  } = useState('Questions');\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const {\n        data\n      } = await publicFetch.get(`/question/user/${username}`);\n      setPosts(data);\n    };\n\n    fetchQuestions();\n  }, [postType, username]);\n  return __jsx(Layout, {\n    extra: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Users \", username, \" - TakeCode\")), __jsx(UserCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(AvatarCard, {\n    username: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(PostList, {\n    postType: postType,\n    setPostType: setPostType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, !posts && __jsx(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  })), posts === null || posts === void 0 ? void 0 : posts.map(({\n    id,\n    title,\n    score,\n    created\n  }) => __jsx(PostItem, {\n    key: id,\n    title: title,\n    vote: score,\n    created: created,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })), (posts === null || posts === void 0 ? void 0 : posts.length) == 0 && __jsx(\"p\", {\n    className: \"not-found-questions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Don't have any questions yet.\"))));\n};\n\nexport async function getServerSideProps(context) {\n  const username = context.params.username;\n  return {\n    props: {\n      username\n    }\n  };\n}\nexport default UserDetail;","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Documents/vercel1/vercel1/pages/users/[username].js"],"names":["React","useEffect","useState","Head","publicFetch","Layout","UserCard","AvatarCard","PostList","PostItem","Spinner","UserDetail","username","posts","setPosts","postType","setPostType","fetchQuestions","data","get","map","id","title","score","created","length","getServerSideProps","context","params","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,SAASC,OAAT,QAAwB,wBAAxB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACnC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACa,QAAD;AAAA,OAAWC;AAAX,MAA0Bd,QAAQ,CAAC,WAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,cAAc,GAAG,YAAY;AACjC,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMd,WAAW,CAACe,GAAZ,CAAiB,kBAAiBP,QAAS,EAA3C,CAAvB;AACAE,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,KAHD;;AAIAD,IAAAA,cAAc;AACf,GANQ,EAMN,CAACF,QAAD,EAAWH,QAAX,CANM,CAAT;AAQA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAcA,QAAd,gBADF,CADF,EAKE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAEA,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEG,QAApB;AAA8B,IAAA,WAAW,EAAEC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACH,KAAD,IACC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,EAOGA,KAPH,aAOGA,KAPH,uBAOGA,KAAK,CAAEO,GAAP,CAAW,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,GAAD,KACV,MAAC,QAAD;AACE,IAAA,GAAG,EAAEH,EADP;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,IAAI,EAAEC,KAHR;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,EAAE,EAAEH,EALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAPH,EAiBG,CAAAR,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEY,MAAP,KAAiB,CAAjB,IACC;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAlBJ,CAFF,CALF,CADF;AAkCD,CA9CD;;AAgDA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAMf,QAAQ,GAAGe,OAAO,CAACC,MAAR,CAAehB,QAAhC;AACA,SAAO;AACLiB,IAAAA,KAAK,EAAE;AACLjB,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Head from 'next/head'\n\nimport { publicFetch } from '../../util/fetcher'\n\nimport Layout from '../../components/layout'\nimport UserCard from '../../components/user-card'\nimport AvatarCard from '../../components/user-card/avatar-card'\nimport PostList from '../../components/user-card/post-list'\nimport PostItem from '../../components/user-card/post-list/post-item'\nimport { Spinner } from '../../components/icons'\n\nconst UserDetail = ({ username }) => {\n  const [posts, setPosts] = useState(null)\n  const [postType, setPostType] = useState('Questions')\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const { data } = await publicFetch.get(`/question/user/${username}`)\n      setPosts(data)\n    }\n    fetchQuestions()\n  }, [postType, username])\n\n  return (\n    <Layout extra={false}>\n      <Head>\n        <title>Users {username} - TakeCode</title>\n      </Head>\n\n      <UserCard>\n        <AvatarCard username={username} />\n        <PostList postType={postType} setPostType={setPostType}>\n          {!posts && (\n            <div className=\"loading\">\n              <Spinner />\n            </div>\n          )}\n\n          {posts?.map(({ id, title, score, created }) => (\n            <PostItem\n              key={id}\n              title={title}\n              vote={score}\n              created={created}\n              id={id}\n            />\n          ))}\n\n          {posts?.length == 0 && (\n            <p className=\"not-found-questions\">\n              Don&apos;t have any questions yet.\n            </p>\n          )}\n        </PostList>\n      </UserCard>\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps(context) {\n  const username = context.params.username\n  return {\n    props: {\n      username\n    }\n  }\n}\n\nexport default UserDetail\n"]},"metadata":{},"sourceType":"module"}