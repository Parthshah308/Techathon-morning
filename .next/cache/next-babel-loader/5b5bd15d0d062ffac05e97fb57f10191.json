{"ast":null,"code":"var _jsxFileName = \"C:\\\\vercel\\\\pages\\\\Question\\\\index.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { publicFetch } from '../../util/fetcher';\nimport Layout from '../../components/layout';\nimport DataTable from 'react-data-table-component';\n\nconst Question = () => {\n  const router = useRouter();\n  const columns = [{\n    name: 'Title',\n    selector: row => row.title\n  }, {\n    name: 'Year',\n    selector: row => row.year\n  }];\n  const data = [{\n    id: 1,\n    title: 'Beetlejuice',\n    year: '1988'\n  }, {\n    id: 2,\n    title: 'Ghostbusters',\n    year: '1984'\n  }]; // eslint-disable-next-line no-unused-vars\n\n  const {\n    0: questions,\n    1: setQuestions\n  } = useState(null);\n  const {\n    0: sortType,\n    1: setSortType\n  } = useState('Votes');\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      const {\n        data\n      } = await publicFetch.get('/question');\n      setQuestions(data);\n    };\n\n    const fetchQuestionByTag = async () => {\n      const {\n        data\n      } = await publicFetch.get(`/questions/${router.query.tag}`);\n      setQuestions(data);\n    };\n\n    if (router.query.tag) {\n      fetchQuestionByTag();\n    } else {\n      fetchQuestion();\n    }\n  }, [router.query.tag]); // eslint-disable-next-line no-unused-vars\n\n  const handleSorting = () => {\n    switch (sortType) {\n      case 'Votes':\n        return (a, b) => b.score - a.score;\n\n      case 'Views':\n        return (a, b) => b.views - a.views;\n\n      case 'Newest':\n        return (a, b) => new Date(b.created) - new Date(a.created);\n\n      case 'Oldest':\n        return (a, b) => new Date(a.created) - new Date(b.created);\n\n      default:\n        break;\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, router.query.tag ? router.query.tag : 'Questions', \" - TakeCode\")), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"All Questions\"), __jsx(DataTable, {\n    columns: columns,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Question;","map":{"version":3,"sources":["C:/vercel/pages/Question/index.js"],"names":["React","useState","useEffect","Head","useRouter","publicFetch","Layout","DataTable","Question","router","columns","name","selector","row","title","year","data","id","questions","setQuestions","sortType","setSortType","fetchQuestion","get","fetchQuestionByTag","query","tag","handleSorting","a","b","score","views","Date","created"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react'\r\nimport Head from 'next/head'\r\nimport { useRouter } from 'next/router'\r\nimport { publicFetch } from '../../util/fetcher'\r\nimport Layout from '../../components/layout'\r\nimport DataTable from 'react-data-table-component'\r\n\r\nconst Question = () => {\r\n  const router = useRouter()\r\n  const columns = [\r\n    {\r\n      name: 'Title',\r\n      selector: (row) => row.title\r\n    },\r\n    {\r\n      name: 'Year',\r\n      selector: (row) => row.year\r\n    }\r\n  ]\r\n\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      title: 'Beetlejuice',\r\n      year: '1988'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Ghostbusters',\r\n      year: '1984'\r\n    }\r\n  ]\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [questions, setQuestions] = useState(null)\r\n  const [sortType, setSortType] = useState('Votes')\r\n\r\n  useEffect(() => {\r\n    const fetchQuestion = async () => {\r\n      const { data } = await publicFetch.get('/question')\r\n      setQuestions(data)\r\n    }\r\n\r\n    const fetchQuestionByTag = async () => {\r\n      const { data } = await publicFetch.get(`/questions/${router.query.tag}`)\r\n      setQuestions(data)\r\n    }\r\n\r\n    if (router.query.tag) {\r\n      fetchQuestionByTag()\r\n    } else {\r\n      fetchQuestion()\r\n    }\r\n  }, [router.query.tag])\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  const handleSorting = () => {\r\n    switch (sortType) {\r\n      case 'Votes':\r\n        return (a, b) => b.score - a.score\r\n      case 'Views':\r\n        return (a, b) => b.views - a.views\r\n      case 'Newest':\r\n        return (a, b) => new Date(b.created) - new Date(a.created)\r\n      case 'Oldest':\r\n        return (a, b) => new Date(a.created) - new Date(b.created)\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Head>\r\n        <title>\r\n          {router.query.tag ? router.query.tag : 'Questions'} - TakeCode\r\n        </title>\r\n      </Head>\r\n      <h2>All Questions</h2>\r\n      <DataTable\r\n            columns={columns}\r\n            data={data}\r\n        />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Question\r\n"]},"metadata":{},"sourceType":"module"}