{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Documents\\\\takecode_vercel-master\\\\takecode_vercel-master\\\\components\\\\question-ask-view\\\\question-form\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport ReactQuill from \"react-quill\";\nimport { FetchContext } from '../../../store/fetch';\nimport Button from '../../button';\nimport Textarea from '../../textarea';\nimport FormInput from '../../form-input';\nimport TagInput from '../../tag-input'; // import \"react-quill/dist/quill.snow.css\";\n// import \"react-quill/dist/quill.bubble.css\";\n\nimport styles from './question-form.module.css';\n\nvar QuestionForm = function QuestionForm() {\n  _s();\n\n  var _useState = useState(initialState),\n      body = _useState[0],\n      setBody = _useState[1];\n\n  var handleBody = function handleBody(e) {\n    console.log(e);\n    setBody(e);\n  };\n\n  var router = useRouter();\n\n  var _useContext = useContext(FetchContext),\n      authAxios = _useContext.authAxios;\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  return __jsx(Formik, {\n    initialValues: {\n      title: '',\n      text: '',\n      tags: []\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n        var setStatus, resetForm;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setStatus = _ref.setStatus, resetForm = _ref.resetForm;\n                setLoading(true);\n                _context.prev = 2;\n                _context.next = 5;\n                return authAxios.post('questions', values);\n\n              case 5:\n                resetForm({});\n                router.push('/');\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                setStatus(_context.t0.response.data.message);\n\n              case 12:\n                setLoading(false);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 9]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    validationSchema: Yup.object({\n      title: Yup.string().required('Title is missing.').max(150, 'Title cannot be longer than 150 characters.').min(15, 'Title must be at least 15 characters.'),\n      text: Yup.string().required('Body is missing.').min(30, 'Body must be at least 30 characters.').max(30000, 'Body cannot be longer than 30000 characters.'),\n      tags: Yup.array().required('Please enter at least one tag.').max(5, 'Please enter no more than 5 tags.').of(Yup.string().max(15, 'Tag cannot be longer than 15 characters. '))\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        errors = _ref3.errors,\n        touched = _ref3.touched,\n        status = _ref3.status,\n        handleChange = _ref3.handleChange,\n        setFieldValue = _ref3.setFieldValue,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        isSubmitting = _ref3.isSubmitting;\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, __jsx(FormInput, {\n      label: \"Title\",\n      inputInfo: \"Be specific and imagine you\\u2019re asking a question to another person\",\n      type: \"text\",\n      name: \"title\",\n      autoComplete: \"off\",\n      value: values.title,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      hasError: touched.title && errors.title,\n      errorMessage: errors.title && errors.title,\n      placeholder: \"e.g Is there an R function for finding the index of an element in a vendor?\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), __jsx(ReactQuill, {\n      placeholder: \"spread your message...\",\n      modules: QuestionForm.modules,\n      formats: QuestionForm.formats,\n      onChange: handleBody,\n      value: body,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), __jsx(TagInput, {\n      label: \"Tags\",\n      inputInfo: \"Add up to 5 tags to describe what your question is about\",\n      type: \"text\",\n      name: \"tags\",\n      value: values.tags,\n      onChange: function onChange(e) {\n        return setFieldValue('tags', e, true);\n      },\n      onBlur: handleBlur,\n      hasError: touched.tags && errors.tags,\n      errorMessage: errors.tags && errors.tags,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      className: styles.buttonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      className: styles.status,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, status), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      primary: true,\n      isLoading: loading,\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"Review your question\"))));\n  });\n};\n\n_s(QuestionForm, \"Iv4Qh3YVG2KFFSEMmK+trGCtuMw=\", false, function () {\n  return [useRouter];\n});\n\n_c = QuestionForm;\nQuestionForm.modules = {\n  toolbar: [[{\n    'font': []\n  }], [{\n    'size': ['small', false, 'large', 'huge']\n  }], ['bold', 'italic', 'underline'], [{\n    'list': 'ordered'\n  }, {\n    'list': 'bullet'\n  }], [{\n    'align': []\n  }], [{\n    'color': []\n  }, {\n    'background': []\n  }], ['link', 'image'], ['code-block'], ['clean']]\n};\nQuestionForm.formats = ['font', 'size', 'bold', 'italic', 'underline', 'list', 'bullet', 'align', 'color', 'background', 'code-block'];\nexport default QuestionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Documents/takecode_vercel-master/takecode_vercel-master/components/question-ask-view/question-form/index.js"],"names":["React","useState","useContext","useRouter","Formik","Yup","ReactQuill","FetchContext","Button","Textarea","FormInput","TagInput","styles","QuestionForm","initialState","body","setBody","handleBody","e","console","log","router","authAxios","loading","setLoading","title","text","tags","values","setStatus","resetForm","post","push","response","data","message","object","string","required","max","min","array","of","errors","touched","status","handleChange","setFieldValue","handleBlur","handleSubmit","isSubmitting","container","modules","formats","buttonContainer","toolbar"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { useRouter } from 'next/router'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\nimport ReactQuill from \"react-quill\";\nimport { FetchContext } from '../../../store/fetch'\n\nimport Button from '../../button'\nimport Textarea from '../../textarea'\nimport FormInput from '../../form-input'\nimport TagInput from '../../tag-input'\n// import \"react-quill/dist/quill.snow.css\";\n// import \"react-quill/dist/quill.bubble.css\";\nimport styles from './question-form.module.css'\n\nconst QuestionForm = () => {\n  const [body,setBody ] = useState(initialState)\n  const handleBody = (e) => {\n    console.log(e)\n    setBody(e)\n}\n\n  const router = useRouter()\n  const { authAxios } = useContext(FetchContext)\n\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <Formik\n      initialValues={{ title: '', text: '', tags: [] }}\n      onSubmit={async (values, { setStatus, resetForm }) => {\n        setLoading(true)\n        try {\n          await authAxios.post('questions', values)\n          resetForm({})\n          router.push('/')\n        } catch (error) {\n          setStatus(error.response.data.message)\n        }\n        setLoading(false)\n      }}\n      validationSchema={Yup.object({\n        title: Yup.string()\n          .required('Title is missing.')\n          .max(150, 'Title cannot be longer than 150 characters.')\n          .min(15, 'Title must be at least 15 characters.'),\n        text: Yup.string()\n          .required('Body is missing.')\n          .min(30, 'Body must be at least 30 characters.')\n          .max(30000, 'Body cannot be longer than 30000 characters.'),\n        tags: Yup.array()\n          .required('Please enter at least one tag.')\n          .max(5, 'Please enter no more than 5 tags.')\n          .of(Yup.string().max(15, 'Tag cannot be longer than 15 characters. '))\n      })}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        status,\n        handleChange,\n        setFieldValue,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <div className={styles.container}>\n            <FormInput\n              label=\"Title\"\n              inputInfo=\"Be specific and imagine you’re asking a question to another person\"\n              type=\"text\"\n              name=\"title\"\n              autoComplete=\"off\"\n              value={values.title}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              hasError={touched.title && errors.title}\n              errorMessage={errors.title && errors.title}\n              placeholder=\"e.g Is there an R function for finding the index of an element in a vendor?\"\n            />\n          <ReactQuill\n                        placeholder='spread your message...'\n                        modules={QuestionForm.modules}\n                        formats={QuestionForm.formats}\n                        onChange={handleBody}\n                        value={body}\n                    />\n            <TagInput\n              label=\"Tags\"\n              inputInfo=\"Add up to 5 tags to describe what your question is about\"\n              type=\"text\"\n              name=\"tags\"\n              value={values.tags}\n              onChange={(e) => setFieldValue('tags', e, true)}\n              onBlur={handleBlur}\n              hasError={touched.tags && errors.tags}\n              errorMessage={errors.tags && errors.tags}\n            />\n          </div>\n          <div className={styles.buttonContainer}>\n            <p className={styles.status}>{status}</p>\n            <div>\n              <Button\n                type=\"submit\"\n                primary\n                isLoading={loading}\n                disabled={isSubmitting}\n              >\n                Review your question\n              </Button>\n            </div>\n          </div>\n        </form>\n      )}\n    </Formik>\n  )\n}\n\nQuestionForm.modules = {\n  toolbar: [\n    [{ 'font': [] }],\n    [{ 'size': ['small', false, 'large', 'huge'] }],\n    ['bold', 'italic', 'underline'],\n    [{'list': 'ordered'}, {'list': 'bullet'}],\n    [{ 'align': [] }],\n    [{ 'color': [] }, { 'background': [] }],\n    ['link', 'image'],\n    ['code-block'],\n    ['clean']\n  ]\n};\n\nQuestionForm.formats = [\n  'font',\n  'size',\n  'bold', 'italic', 'underline',\n  'list', 'bullet',\n  'align',\n  'color', 'background',\n   \n  'code-block'\n];\n\nexport default QuestionForm\n"]},"metadata":{},"sourceType":"module"}