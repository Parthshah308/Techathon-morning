{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Documents\\\\takecode_vercel-master\\\\takecode_vercel-master\\\\components\\\\auth-forms\\\\signup-form\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { publicFetch } from '../../../util/fetcher';\nimport { AuthContext } from '../../../store/auth';\nimport ModalContext from '../../../store/modal';\nimport FormInput from '../../form-input';\nimport Button from '../../button';\nimport styles from './signup-form.module.css';\n\nvar SignupForm = function SignupForm() {\n  _s();\n\n  var _useContext = useContext(AuthContext),\n      setAuthState = _useContext.setAuthState;\n\n  var _useContext2 = useContext(ModalContext),\n      setIsComponentVisible = _useContext2.setIsComponentVisible;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  return __jsx(Formik, {\n    initialValues: {\n      username: '',\n      password: '',\n      passwordConfirmation: ''\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n        var setStatus, resetForm, _yield$publicFetch$po, data, token, expiresAt, userInfo;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setStatus = _ref.setStatus, resetForm = _ref.resetForm;\n                setLoading(true);\n                _context.prev = 2;\n                _context.next = 5;\n                return publicFetch.post('signup', values);\n\n              case 5:\n                _yield$publicFetch$po = _context.sent;\n                data = _yield$publicFetch$po.data;\n                token = data.token, expiresAt = data.expiresAt, userInfo = data.userInfo;\n                setAuthState({\n                  token: token,\n                  expiresAt: expiresAt,\n                  userInfo: userInfo\n                });\n                resetForm({});\n                setIsComponentVisible(false);\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](2);\n                setStatus(_context.t0.response.data.message);\n\n              case 16:\n                setLoading(false);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 13]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    validationSchema: Yup.object({\n      username: Yup.string().required('Required').max(16, 'Must be at most 16 characters long').matches(/^[a-zA-Z0-9_-]+$/, 'Contains invalid characters'),\n      password: Yup.string().required('Required').min(6, 'Must be at least 6 characters long').max(50, 'Must be at most 50 characters long'),\n      passwordConfirmation: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match')\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        errors = _ref3.errors,\n        touched = _ref3.touched,\n        status = _ref3.status,\n        handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        isSubmitting = _ref3.isSubmitting;\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      className: styles.form,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, __jsx(FormInput, {\n      label: \"Username\",\n      type: \"text\",\n      name: \"username\",\n      autoComplete: \"off\",\n      value: values.username,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      hasError: touched.username && errors.username,\n      errorMessage: errors.username && errors.username,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), __jsx(FormInput, {\n      label: \"email\",\n      type: \"text\",\n      name: \"username\",\n      autoComplete: \"off\",\n      value: values.username,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      hasError: touched.username && errors.username,\n      errorMessage: errors.username && errors.username,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }\n    }), __jsx(FormInput, {\n      label: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      autoComplete: \"off\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      hasError: touched.password && errors.password,\n      errorMessage: errors.password && errors.password,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), __jsx(FormInput, {\n      label: \"Password Confirm\",\n      type: \"password\",\n      name: \"passwordConfirmation\",\n      autoComplete: \"off\",\n      value: values.passwordConfirmation,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      hasError: touched.passwordConfirmation && errors.passwordConfirmation,\n      errorMessage: errors.passwordConfirmation && errors.passwordConfirmation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }), __jsx(\"p\", {\n      className: styles.status,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, status), __jsx(Button, {\n      primary: true,\n      full: true,\n      className: styles.submitButton,\n      disabled: isSubmitting,\n      isLoading: loading,\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Sign up\"));\n  });\n};\n\n_s(SignupForm, \"vg+tpWHDT1DFU8Kot+0CyK2yEL4=\");\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Documents/takecode_vercel-master/takecode_vercel-master/components/auth-forms/signup-form/index.js"],"names":["React","useState","useContext","Formik","Yup","publicFetch","AuthContext","ModalContext","FormInput","Button","styles","SignupForm","setAuthState","setIsComponentVisible","loading","setLoading","username","password","passwordConfirmation","values","setStatus","resetForm","post","data","token","expiresAt","userInfo","response","message","object","string","required","max","matches","min","oneOf","ref","errors","touched","status","handleChange","handleBlur","handleSubmit","isSubmitting","form","submitButton"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\n\nimport { publicFetch } from '../../../util/fetcher'\nimport { AuthContext } from '../../../store/auth'\nimport ModalContext from '../../../store/modal'\n\nimport FormInput from '../../form-input'\nimport Button from '../../button'\n\nimport styles from './signup-form.module.css'\n\nconst SignupForm = () => {\n  const { setAuthState } = useContext(AuthContext)\n  const { setIsComponentVisible } = useContext(ModalContext)\n\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <Formik\n      initialValues={{ username: '', password: '', passwordConfirmation: '' }}\n      onSubmit={async (values, { setStatus, resetForm }) => {\n        setLoading(true)\n        try {\n          const { data } = await publicFetch.post('signup', values)\n          const { token, expiresAt, userInfo } = data\n          setAuthState({ token, expiresAt, userInfo })\n          resetForm({})\n          setIsComponentVisible(false)\n        } catch (error) {\n          setStatus(error.response.data.message)\n        }\n        setLoading(false)\n      }}\n      validationSchema={Yup.object({\n        username: Yup.string()\n          .required('Required')\n          .max(16, 'Must be at most 16 characters long')\n          .matches(/^[a-zA-Z0-9_-]+$/, 'Contains invalid characters'),\n        password: Yup.string()\n          .required('Required')\n          .min(6, 'Must be at least 6 characters long')\n          .max(50, 'Must be at most 50 characters long'),\n        passwordConfirmation: Yup.string().oneOf(\n          [Yup.ref('password'), null],\n          'Passwords must match'\n        )\n      })}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        status,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      }) => (\n        <form onSubmit={handleSubmit} className={styles.form}>\n          <FormInput\n            label=\"Username\"\n            type=\"text\"\n            name=\"username\"\n            autoComplete=\"off\"\n            value={values.username}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            hasError={touched.username && errors.username}\n            errorMessage={errors.username && errors.username}\n          />\n             <FormInput\n            label=\"email\"\n            type=\"text\"\n            name=\"username\"\n            autoComplete=\"off\"\n            value={values.username}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            hasError={touched.username && errors.username}\n            errorMessage={errors.username && errors.username}\n          />\n          <FormInput\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            autoComplete=\"off\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            hasError={touched.password && errors.password}\n            errorMessage={errors.password && errors.password}\n          />\n          <FormInput\n            label=\"Password Confirm\"\n            type=\"password\"\n            name=\"passwordConfirmation\"\n            autoComplete=\"off\"\n            value={values.passwordConfirmation}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            hasError={\n              touched.passwordConfirmation && errors.passwordConfirmation\n            }\n            errorMessage={\n              errors.passwordConfirmation && errors.passwordConfirmation\n            }\n          />\n          <p className={styles.status}>{status}</p>\n          <Button\n            primary\n            full\n            className={styles.submitButton}\n            disabled={isSubmitting}\n            isLoading={loading}\n            type=\"submit\"\n          >\n            Sign up\n          </Button>\n        </form>\n      )}\n    </Formik>\n  )\n}\n\nexport default SignupForm\n"]},"metadata":{},"sourceType":"module"}